Завантажуємо клієнт GIT, який створює користувацький репозиторій
https://git-scm.com/downloads

Для запуску проекту права мишка в папці з проектом, в контекстому меню вибірається команда "Git Bush Here"

Для створення проекту набираємо команду "$ git init"
Для того щоб переконатись, що створюється проект, потрібно переглянути скриті папки в проекті

Для того щоб отримати додакову інформацію по командам git, потрібно набрати "$ git help (і назва команди)"
Наприклад: "$ git help config"

Створення користувача в проекті
1. команда - $ git config --global user.name "login"
2. команда - $ git config --global user.email "email"
Для перевірки конфігурації налаштувань пишемо команду - $ git config --list - виведуться всі налаштування

$ git status - виводить інформацію стану, завжди використовується для перевірки команд
добавлення файлів під нагляд git -
$ git add . - (.) - значить, що добавляються всі файли проекту, або потрібно написати назву файлу, який потрібно взяти під нагля (Назва файлу замість крапки)

Для додання файлів в локальний репозиторій використовуємо команду $ git commit -a -m"(назва точки збереження)" - де -а - додати всі файли, а -m - додати комент, або назву для точки збереження

Добавлення/збереження змін
1. $ git add . //Добавляємо файли на реєстрацію змін
2. $ git commit -m"(інша точка збереження)" //Проводимо зміни

Команди додавання файлів в глобальний репозиторій
Потрібно створити репозиторій на сайті https://github.com - де потрібно створити реєстрацію
Вводяться одноразово, коли користувач добавляє данні в репозиторій перший раз (Нижче)
$ git remote add origin https://github.com/anonymous-craftsman/forGit.git
$ git push -u origin master

Перед тим як завжди добавляти данні на сервер GitHub, потрібно їх комітити (git add . + git commit -m"назва точки збереження")
Послідуюча відправка данних на сервер, виконується командою $ git push

Створюємо другого користувача
1. Створюємо папку в яку буде клонуватися проект
2. В цій папці запускаємо консколь Git Bush Here
3. Клонуємо проект командою - $git clone (і посилка на проект, яку отримуємо на сервері)
4. Після того як склонували проект, переходими до папки самого проекту командою $ git cd (назва проекту - папки)
5. Після того як ми перейшли до проекту, потрібно скомітити все
6. Тепер ми фечим (Скачує із серверу файли і заганяє в клієнтську частину, але НЕ ПОКАЗУЄ їх) проект командою $git fetch
7. Після fetch, щоб переглянути оновлені файли, ми пуллим (Відображає змінни які отримали із серверу), командою $ git pull

Коли другий користувач вносить змінни до проекту, потрібно виконати послідовність дій:
1. Потрібно скомітить проект
2. Після чого прописати команду $ git push

Створення нової гілки для користувача
Для створення і переходу на гілку потрібно прописати команду $ git checkout -b (Назва нової гілки)
$ git branch (Назва нової гілки) - Створює нову гілку без переходу
Для перегляду існуючих гілок потрібно прописати команду - $ git branch -v
Щоб перейти на існуючу гілку, потрібно написати команду - $ git branch (Назва існуючої гілки)